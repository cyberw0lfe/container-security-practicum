{
    "Controls": [
        {
            "id": "3",
            "version": "aks-1.0",
            "detected_version": "none",
            "text": "Worker Node Security Configuration",
            "node_type": "node",
            "tests": [
                {
                    "section": "3.1",
                    "type": "",
                    "pass": 4,
                    "fail": 0,
                    "warn": 0,
                    "info": 0,
                    "desc": "Worker Node Configuration Files",
                    "results": [
                        {
                            "test_number": "3.1.1",
                            "test_desc": "Ensure that the kubeconfig file permissions are set to 644 or more restrictive (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c permissions=%a /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 644 /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 644 /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 644 or more restrictive"
                        },
                        {
                            "test_number": "3.1.2",
                            "test_desc": "Ensure that the kubelet kubeconfig file ownership is set to root:root (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c %U:%G /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present"
                        },
                        {
                            "test_number": "3.1.3",
                            "test_desc": "Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Manual)",
                            "audit": "/bin/sh -c 'if test -e /etc/default/kubelet; then stat -c permissions=%a /etc/default/kubelet; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command (using the config file location identified in the Audit step)\nchmod 644 /etc/default/kubelet\n",
                            "test_info": [
                                "Run the following command (using the config file location identified in the Audit step)\nchmod 644 /etc/default/kubelet\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=644",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 644, expected 644 or more restrictive"
                        },
                        {
                            "test_number": "3.1.4",
                            "test_desc": "Ensure that the kubelet configuration file ownership is set to root:root (Manual)",
                            "audit": "/bin/sh -c 'if test -e /etc/default/kubelet; then stat -c %U:%G /etc/default/kubelet; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command (using the config file location identified in the Audit step)\nchown root:root /etc/default/kubelet\n",
                            "test_info": [
                                "Run the following command (using the config file location identified in the Audit step)\nchown root:root /etc/default/kubelet\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present"
                        }
                    ]
                },
                {
                    "section": "3.2",
                    "type": "",
                    "pass": 10,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Kubelet",
                    "results": [
                        {
                            "test_number": "3.2.1",
                            "test_desc": "Ensure that the --anonymous-auth argument is set to false (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set authentication: anonymous: enabled to\nfalse.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--anonymous-auth=false\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set authentication: anonymous: enabled to\nfalse.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--anonymous-auth=false\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--anonymous-auth' is equal to 'false'"
                        },
                        {
                            "test_number": "3.2.2",
                            "test_desc": "Ensure that the --authorization-mode argument is not set to AlwaysAllow (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set authorization: mode to Webhook. If\nusing executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set authorization: mode to Webhook. If\nusing executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--authorization-mode' does not have 'AlwaysAllow'"
                        },
                        {
                            "test_number": "3.2.3",
                            "test_desc": "Ensure that the --client-ca-file argument is set as appropriate (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set authentication: x509: clientCAFile to\nthe location of the client CA file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set authentication: x509: clientCAFile to\nthe location of the client CA file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--client-ca-file' is present"
                        },
                        {
                            "test_number": "3.2.4",
                            "test_desc": "Ensure that the --read-only-port argument is set to 0 (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set readOnlyPort to 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set readOnlyPort to 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--read-only-port' is equal to '0'"
                        },
                        {
                            "test_number": "3.2.5",
                            "test_desc": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set streamingConnectionIdleTimeout to a\nvalue other than 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout=5m\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set streamingConnectionIdleTimeout to a\nvalue other than 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout=5m\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--streaming-connection-idle-timeout' is not equal to '0' OR '--streaming-connection-idle-timeout' is not present"
                        },
                        {
                            "test_number": "3.2.6",
                            "test_desc": "Ensure that the --protect-kernel-defaults argument is set to true (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set protectKernelDefaults: true.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--protect-kernel-defaults=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set protectKernelDefaults: true.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--protect-kernel-defaults=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--protect-kernel-defaults' is equal to 'true'"
                        },
                        {
                            "test_number": "3.2.7",
                            "test_desc": "Ensure that the --make-iptables-util-chains argument is set to true (Manual) ",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "KUBELET_FLAGS=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key \nKUBELET_REGISTER_SCHEDULABLE=true\nNETWORK_POLICY=\nKUBELET_IMAGE=\nKUBELET_NODE_LABELS=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'{.makeIPTablesUtilChains}' is present OR '{.makeIPTablesUtilChains}' is not present"
                        },
                        {
                            "test_number": "3.2.8",
                            "test_desc": "Ensure that the --hostname-override argument is not set (Manual)",
                            "audit": "/bin/ps -fC kubelet ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and remove the --hostname-override argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and remove the --hostname-override argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--hostname-override' is not present"
                        },
                        {
                            "test_number": "3.2.9",
                            "test_desc": "Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--event-qps' is equal to '0'"
                        },
                        {
                            "test_number": "3.2.10",
                            "test_desc": "Ensure that the --rotate-certificates argument is not set to false (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to add the line rotateCertificates: true or\nremove it altogether to use the default value.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS\nvariable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to add the line rotateCertificates: true or\nremove it altogether to use the default value.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS\nvariable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:05:08 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--rotate-certificates' is equal to 'true' OR '--rotate-certificates' is not present"
                        },
                        {
                            "test_number": "3.2.11",
                            "test_desc": "Ensure that the RotateKubeletServerCertificate argument is set to true (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /etc/default/kubelet",
                            "type": "",
                            "remediation": "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.\n--feature-gates=RotateKubeletServerCertificate=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.\n--feature-gates=RotateKubeletServerCertificate=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "WARN",
                            "actual_value": "KUBELET_FLAGS=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key \nKUBELET_REGISTER_SCHEDULABLE=true\nNETWORK_POLICY=\nKUBELET_IMAGE=\nKUBELET_NODE_LABELS=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'{.featureGates.RotateKubeletServerCertificate}' is present"
                        }
                    ]
                }
            ],
            "total_pass": 14,
            "total_fail": 0,
            "total_warn": 1,
            "total_info": 0
        },
        {
            "id": "4",
            "version": "aks-1.0",
            "detected_version": "none",
            "text": "Policies",
            "node_type": "policies",
            "tests": [
                {
                    "section": "4.1",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 6,
                    "info": 0,
                    "desc": "RBAC and Service Accounts",
                    "results": [
                        {
                            "test_number": "4.1.1",
                            "test_desc": "Ensure that the cluster-admin role is only used where required (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and\nif they need this role or if they could use a role with fewer privileges.\nWhere possible, first bind users to a lower privileged role and then remove the\nclusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n",
                            "test_info": [
                                "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and\nif they need this role or if they could use a role with fewer privileges.\nWhere possible, first bind users to a lower privileged role and then remove the\nclusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.1.2",
                            "test_desc": "Minimize access to secrets (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove get, list and watch access to secret objects in the cluster.\n",
                            "test_info": [
                                "Where possible, remove get, list and watch access to secret objects in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.1.3",
                            "test_desc": "Minimize wildcard use in Roles and ClusterRoles (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible replace any use of wildcards in clusterroles and roles with specific\nobjects or actions.\n",
                            "test_info": [
                                "Where possible replace any use of wildcards in clusterroles and roles with specific\nobjects or actions.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.1.4",
                            "test_desc": "Minimize access to create pods (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove create access to pod objects in the cluster.\n",
                            "test_info": [
                                "Where possible, remove create access to pod objects in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.1.5",
                            "test_desc": "Ensure that default service accounts are not actively used. (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create explicit service accounts wherever a Kubernetes workload requires specific access\nto the Kubernetes API server.\nModify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n",
                            "test_info": [
                                "Create explicit service accounts wherever a Kubernetes workload requires specific access\nto the Kubernetes API server.\nModify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.1.6",
                            "test_desc": "Ensure that Service Account Tokens are only mounted where necessary (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Modify the definition of pods and service accounts which do not need to mount service\naccount tokens to disable it.\n",
                            "test_info": [
                                "Modify the definition of pods and service accounts which do not need to mount service\naccount tokens to disable it.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "4.2",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 9,
                    "info": 0,
                    "desc": "Pod Security Policies",
                    "results": [
                        {
                            "test_number": "4.2.1",
                            "test_desc": "Minimize the admission of privileged containers (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that\nthe .spec.privileged field is omitted or set to false.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that\nthe .spec.privileged field is omitted or set to false.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.2",
                            "test_desc": "Minimize the admission of containers wishing to share the host process ID namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostPID field is omitted or set to false.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostPID field is omitted or set to false.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.3",
                            "test_desc": "Minimize the admission of containers wishing to share the host IPC namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostIPC field is omitted or set to false.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostIPC field is omitted or set to false.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.4",
                            "test_desc": "Minimize the admission of containers wishing to share the host network namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostNetwork field is omitted or set to false.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostNetwork field is omitted or set to false.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.5",
                            "test_desc": "Minimize the admission of containers with allowPrivilegeEscalation (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.allowPrivilegeEscalation field is omitted or set to false.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.allowPrivilegeEscalation field is omitted or set to false.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.6",
                            "test_desc": "Minimize the admission of root containers (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.runAsUser.rule is set to either MustRunAsNonRoot or MustRunAs with the range of\nUIDs not including 0.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.runAsUser.rule is set to either MustRunAsNonRoot or MustRunAs with the range of\nUIDs not including 0.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.7",
                            "test_desc": "Minimize the admission of containers with the NET_RAW capability (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.requiredDropCapabilities is set to include either NET_RAW or ALL.\n",
                            "test_info": [
                                "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.requiredDropCapabilities is set to include either NET_RAW or ALL.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.8",
                            "test_desc": "Minimize the admission of containers with added capabilities (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Ensure that allowedCapabilities is not present in PSPs for the cluster unless\nit is set to an empty array.\n",
                            "test_info": [
                                "Ensure that allowedCapabilities is not present in PSPs for the cluster unless\nit is set to an empty array.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.2.9",
                            "test_desc": "Minimize the admission of containers with capabilities assigned (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Review the use of capabilities in applications running on your cluster. Where a namespace\ncontains applications which do not require any Linux capabities to operate consider adding\na PSP which forbids the admission of containers which do not drop all capabilities.\n",
                            "test_info": [
                                "Review the use of capabilities in applications running on your cluster. Where a namespace\ncontains applications which do not require any Linux capabities to operate consider adding\na PSP which forbids the admission of containers which do not drop all capabilities.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "4.4",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "CNI Plugin",
                    "results": [
                        {
                            "test_number": "4.4.1",
                            "test_desc": "Ensure that the latest CNI version is used (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Review the documentation of AWS CNI plugin, and ensure latest CNI version is used.\n",
                            "test_info": [
                                "Review the documentation of AWS CNI plugin, and ensure latest CNI version is used.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.4.2",
                            "test_desc": "Ensure that all Namespaces have Network Policies defined (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the documentation and create NetworkPolicy objects as you need them.\n",
                            "test_info": [
                                "Follow the documentation and create NetworkPolicy objects as you need them.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "4.5",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "Secrets Management",
                    "results": [
                        {
                            "test_number": "4.5.1",
                            "test_desc": "Prefer using secrets as files over secrets as environment variables (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "If possible, rewrite application code to read secrets from mounted secret files, rather than\nfrom environment variables.\n",
                            "test_info": [
                                "If possible, rewrite application code to read secrets from mounted secret files, rather than\nfrom environment variables.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.5.2",
                            "test_desc": "Consider external secret storage (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Refer to the secrets management options offered by your cloud provider or a third-party\nsecrets management solution.\n",
                            "test_info": [
                                "Refer to the secrets management options offered by your cloud provider or a third-party\nsecrets management solution.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "4.6",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Extensible Admission Control",
                    "results": [
                        {
                            "test_number": "4.6.1",
                            "test_desc": "Verify that admission controllers are working as expected (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "4.7",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 3,
                    "info": 0,
                    "desc": "General Policies",
                    "results": [
                        {
                            "test_number": "4.7.1",
                            "test_desc": "Create administrative boundaries between resources using namespaces (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the documentation and create namespaces for objects in your deployment as you need\nthem.\n",
                            "test_info": [
                                "Follow the documentation and create namespaces for objects in your deployment as you need\nthem.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.7.2",
                            "test_desc": "Apply Security Context to Your Pods and Containers (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the Kubernetes documentation and apply security contexts to your pods. For a\nsuggested list of security contexts, you may refer to the CIS Security Benchmark for Docker\nContainers.\n",
                            "test_info": [
                                "Follow the Kubernetes documentation and apply security contexts to your pods. For a\nsuggested list of security contexts, you may refer to the CIS Security Benchmark for Docker\nContainers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "4.7.3",
                            "test_desc": "The default namespace should not be used (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes\nresources and that all new resources are created in a specific namespace.\n",
                            "test_info": [
                                "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes\nresources and that all new resources are created in a specific namespace.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                }
            ],
            "total_pass": 0,
            "total_fail": 0,
            "total_warn": 23,
            "total_info": 0
        },
        {
            "id": "5",
            "version": "aks-1.0",
            "detected_version": "none",
            "text": "Managed Services",
            "node_type": "managedservices",
            "tests": [
                {
                    "section": "5.1",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 4,
                    "info": 0,
                    "desc": "Image Registry and Image Scanning",
                    "results": [
                        {
                            "test_number": "5.1.1",
                            "test_desc": "Ensure Image Vulnerability Scanning using Azure Defender image scanning or a third party provider (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.2",
                            "test_desc": "Minimize user access to Azure Container Registry (ACR) (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Azure Container Registry\nIf you use Azure Container Registry (ACR) as your container image store, you need to grant\npermissions to the service principal for your AKS cluster to read and pull images. Currently,\nthe recommended configuration is to use the az aks create or az aks update command to\nintegrate with a registry and assign the appropriate role for the service principal. For\ndetailed steps, see Authenticate with Azure Container Registry from Azure Kubernetes\nService.\nTo avoid needing an Owner or Azure account administrator role, you can configure a\nservice principal manually or use an existing service principal to authenticate ACR from\nAKS. For more information, see ACR authentication with service principals or Authenticate\nfrom Kubernetes with a pull secret.\n",
                            "test_info": [
                                "Azure Container Registry\nIf you use Azure Container Registry (ACR) as your container image store, you need to grant\npermissions to the service principal for your AKS cluster to read and pull images. Currently,\nthe recommended configuration is to use the az aks create or az aks update command to\nintegrate with a registry and assign the appropriate role for the service principal. For\ndetailed steps, see Authenticate with Azure Container Registry from Azure Kubernetes\nService.\nTo avoid needing an Owner or Azure account administrator role, you can configure a\nservice principal manually or use an existing service principal to authenticate ACR from\nAKS. For more information, see ACR authentication with service principals or Authenticate\nfrom Kubernetes with a pull secret.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.3",
                            "test_desc": "Minimize cluster access to read-only for Azure Container Registry (ACR) (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.4",
                            "test_desc": "Minimize Container Registries to only those approved (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.2",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Access and identity options for Azure Kubernetes Service (AKS)",
                    "results": [
                        {
                            "test_number": "5.2.1",
                            "test_desc": "Prefer using dedicated AKS Service Accounts (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Azure Active Directory integration\nThe security of AKS clusters can be enhanced with the integration of Azure Active Directory\n(AD). Built on decades of enterprise identity management, Azure AD is a multi-tenant,\ncloud-based directory, and identity management service that combines core directory\nservices, application access management, and identity protection. With Azure AD, you can\nintegrate on-premises identities into AKS clusters to provide a single source for account\nmanagement and security.\nAzure Active Directory integration with AKS clusters\nWith Azure AD-integrated AKS clusters, you can grant users or groups access to Kubernetes\nresources within a namespace or across the cluster. To obtain a kubectl configuration\ncontext, a user can run the az aks get-credentials command. When a user then interacts\nwith the AKS cluster with kubectl, they're prompted to sign in with their Azure AD\ncredentials. This approach provides a single source for user account management and\npassword credentials. The user can only access the resources as defined by the cluster\nadministrator.\nAzure AD authentication is provided to AKS clusters with OpenID Connect. OpenID Connect\nis an identity layer built on top of the OAuth 2.0 protocol. For more information on OpenID\nConnect, see the Open ID connect documentation. From inside of the Kubernetes cluster,\nWebhook Token Authentication is used to verify authentication tokens. Webhook token\nauthentication is configured and managed as part of the AKS cluster.\n",
                            "test_info": [
                                "Azure Active Directory integration\nThe security of AKS clusters can be enhanced with the integration of Azure Active Directory\n(AD). Built on decades of enterprise identity management, Azure AD is a multi-tenant,\ncloud-based directory, and identity management service that combines core directory\nservices, application access management, and identity protection. With Azure AD, you can\nintegrate on-premises identities into AKS clusters to provide a single source for account\nmanagement and security.\nAzure Active Directory integration with AKS clusters\nWith Azure AD-integrated AKS clusters, you can grant users or groups access to Kubernetes\nresources within a namespace or across the cluster. To obtain a kubectl configuration\ncontext, a user can run the az aks get-credentials command. When a user then interacts\nwith the AKS cluster with kubectl, they're prompted to sign in with their Azure AD\ncredentials. This approach provides a single source for user account management and\npassword credentials. The user can only access the resources as defined by the cluster\nadministrator.\nAzure AD authentication is provided to AKS clusters with OpenID Connect. OpenID Connect\nis an identity layer built on top of the OAuth 2.0 protocol. For more information on OpenID\nConnect, see the Open ID connect documentation. From inside of the Kubernetes cluster,\nWebhook Token Authentication is used to verify authentication tokens. Webhook token\nauthentication is configured and managed as part of the AKS cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.3",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Key Management Service (KMS)",
                    "results": [
                        {
                            "test_number": "5.3.1",
                            "test_desc": "Ensure Kubernetes Secrets are encrypted (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.4",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 5,
                    "info": 0,
                    "desc": "Cluster Networking",
                    "results": [
                        {
                            "test_number": "5.4.1",
                            "test_desc": "Restrict Access to the Control Plane Endpoint (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.4.2",
                            "test_desc": "Ensure clusters are created with Private Endpoint Enabled and Public Access Disabled (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.4.3",
                            "test_desc": "Ensure clusters are created with Private Nodes (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.4.4",
                            "test_desc": "Ensure Network Policy is Enabled and set as appropriate (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.4.5",
                            "test_desc": "Encrypt traffic to HTTPS load balancers with TLS certificates (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.5",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "Authentication and Authorization",
                    "results": [
                        {
                            "test_number": "5.5.1",
                            "test_desc": "Manage Kubernetes RBAC users with Azure AD (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.5.2",
                            "test_desc": "Use Azure RBAC for Kubernetes Authorization (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.6",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "Other Cluster Configurations",
                    "results": [
                        {
                            "test_number": "5.6.1",
                            "test_desc": "Restrict untrusted workloads (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.6.2",
                            "test_desc": "Hostile multi-tenant workloads (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "No remediation",
                            "test_info": [
                                "No remediation"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                }
            ],
            "total_pass": 0,
            "total_fail": 0,
            "total_warn": 15,
            "total_info": 0
        }
    ],
    "Totals": {
        "total_pass": 14,
        "total_fail": 0,
        "total_warn": 39,
        "total_info": 0
    }
}