{
    "Controls": [
        {
            "id": "4",
            "version": "cis-1.7",
            "detected_version": "1.26",
            "text": "Worker Node Security Configuration",
            "node_type": "node",
            "tests": [
                {
                    "section": "4.1",
                    "type": "",
                    "pass": 10,
                    "fail": 0,
                    "warn": 0,
                    "info": 0,
                    "desc": "Worker Node Configuration Files",
                    "results": [
                        {
                            "test_number": "4.1.1",
                            "test_desc": "Ensure that the kubelet service file permissions are set to 600 or more restrictive (Automated)",
                            "audit": "/bin/sh -c 'if test -e /etc/systemd/system/kubelet.service; then stat -c permissions=%a /etc/systemd/system/kubelet.service; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example, chmod 600 /etc/systemd/system/kubelet.service\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example, chmod 600 /etc/systemd/system/kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 600 or more restrictive"
                        },
                        {
                            "test_number": "4.1.2",
                            "test_desc": "Ensure that the kubelet service file ownership is set to root:root (Automated)",
                            "audit": "/bin/sh -c 'if test -e /etc/systemd/system/kubelet.service; then stat -c %U:%G /etc/systemd/system/kubelet.service; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /etc/systemd/system/kubelet.service\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /etc/systemd/system/kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present"
                        },
                        {
                            "test_number": "4.1.3",
                            "test_desc": "If proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c permissions=%a /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 600 /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 600 /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 600 or more restrictive OR '/var/lib/kubelet/kubeconfig' is not present"
                        },
                        {
                            "test_number": "4.1.4",
                            "test_desc": "If proxy kubeconfig file exists ensure ownership is set to root:root (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c %U:%G /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example, chown root:root /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example, chown root:root /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present OR '/var/lib/kubelet/kubeconfig' is not present"
                        },
                        {
                            "test_number": "4.1.5",
                            "test_desc": "Ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive (Automated)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c permissions=%a /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 600 /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 600 /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 600 or more restrictive"
                        },
                        {
                            "test_number": "4.1.6",
                            "test_desc": "Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root (Automated)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c %U:%G /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present"
                        },
                        {
                            "test_number": "4.1.7",
                            "test_desc": "Ensure that the certificate authorities file permissions are set to 600 or more restrictive (Manual)",
                            "audit": "CAFILE=$(ps -ef | grep kubelet | grep -v apiserver | grep -- --client-ca-file= | awk -F '--client-ca-file=' '{print $2}' | awk '{print $1}' | uniq)\nif test -z $CAFILE; then CAFILE=/etc/kubernetes/certs/ca.crt; fi\nif test -e $CAFILE; then stat -c permissions=%a $CAFILE; fi\n",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command to modify the file permissions of the\n--client-ca-file chmod 600 \u003cfilename\u003e\n",
                            "test_info": [
                                "Run the following command to modify the file permissions of the\n--client-ca-file chmod 600 \u003cfilename\u003e\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 600 or more restrictive"
                        },
                        {
                            "test_number": "4.1.8",
                            "test_desc": "Ensure that the client certificate authorities file ownership is set to root:root (Manual)",
                            "audit": "CAFILE=$(ps -ef | grep kubelet | grep -v apiserver | grep -- --client-ca-file= | awk -F '--client-ca-file=' '{print $2}' | awk '{print $1}' | uniq)\nif test -z $CAFILE; then CAFILE=/etc/kubernetes/certs/ca.crt; fi\nif test -e $CAFILE; then stat -c %U:%G $CAFILE; fi\n",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command to modify the ownership of the --client-ca-file.\nchown root:root \u003cfilename\u003e\n",
                            "test_info": [
                                "Run the following command to modify the ownership of the --client-ca-file.\nchown root:root \u003cfilename\u003e\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is equal to 'root:root'"
                        },
                        {
                            "test_number": "4.1.9",
                            "test_desc": "If the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c permissions=%a /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command (using the config file location identified in the Audit step)\nchmod 600 /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the following command (using the config file location identified in the Audit step)\nchmod 600 /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "permissions=600",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "permissions has permissions 600, expected 600 or more restrictive"
                        },
                        {
                            "test_number": "4.1.10",
                            "test_desc": "If the kubelet config.yaml configuration file is being used validate file ownership is set to root:root (Manual)",
                            "audit": "/bin/sh -c 'if test -e /var/lib/kubelet/kubeconfig; then stat -c %U:%G /var/lib/kubelet/kubeconfig; fi' ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Run the following command (using the config file location identified in the Audit step)\nchown root:root /var/lib/kubelet/kubeconfig\n",
                            "test_info": [
                                "Run the following command (using the config file location identified in the Audit step)\nchown root:root /var/lib/kubelet/kubeconfig\n"
                            ],
                            "status": "PASS",
                            "actual_value": "root:root",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'root:root' is present"
                        }
                    ]
                },
                {
                    "section": "4.2",
                    "type": "",
                    "pass": 12,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Kubelet",
                    "results": [
                        {
                            "test_number": "4.2.1",
                            "test_desc": "Ensure that the --anonymous-auth argument is set to false (Automated)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to\n`false`.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n`--anonymous-auth=false`\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `authentication: anonymous: enabled` to\n`false`.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n`--anonymous-auth=false`\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'--anonymous-auth' is equal to 'false'"
                        },
                        {
                            "test_number": "4.2.2",
                            "test_desc": "Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `authorization.mode` to Webhook. If\nusing executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `authorization.mode` to Webhook. If\nusing executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'--authorization-mode' does not have 'AlwaysAllow'"
                        },
                        {
                            "test_number": "4.2.3",
                            "test_desc": "Ensure that the --client-ca-file argument is set as appropriate (Automated)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `authentication.x509.clientCAFile` to\nthe location of the client CA file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `authentication.x509.clientCAFile` to\nthe location of the client CA file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'--client-ca-file' is present"
                        },
                        {
                            "test_number": "4.2.4",
                            "test_desc": "Verify that the --read-only-port argument is set to 0 (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `readOnlyPort` to 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `readOnlyPort` to 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--read-only-port' is equal to '0' OR '--read-only-port' is not present"
                        },
                        {
                            "test_number": "4.2.5",
                            "test_desc": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a\nvalue other than 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout=5m\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `streamingConnectionIdleTimeout` to a\nvalue other than 0.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout=5m\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--streaming-connection-idle-timeout' is not equal to '0' OR '--streaming-connection-idle-timeout' is not present"
                        },
                        {
                            "test_number": "4.2.6",
                            "test_desc": "Ensure that the --make-iptables-util-chains argument is set to true (Automated)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `makeIPTablesUtilChains` to `true`.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `makeIPTablesUtilChains` to `true`.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /etc/kubernetes/certs/ca.crt\n    server: https://benchsecak-benchsec-rg-d3232b-j5erejk4.hcp.eastus.azmk8s.io:443\n  name: default-cluster\ncontexts:\n- context:\n    cluster: default-cluster\n    namespace: default\n    user: default-auth\n  name: default-context\ncurrent-context: default-context\nkind: Config\npreferences: {}\nusers:\n- name: default-auth\n  user:\n    client-certificate: /var/lib/kubelet/pki/kubelet-client-current.pem\n    client-key: /var/lib/kubelet/pki/kubelet-client-current.pem",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'{.makeIPTablesUtilChains}' is present OR '{.makeIPTablesUtilChains}' is not present"
                        },
                        {
                            "test_number": "4.2.7",
                            "test_desc": "Ensure that the --hostname-override argument is not set (Manual)",
                            "audit": "/bin/ps -fC kubelet ",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "",
                            "remediation": "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and remove the --hostname-override argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and remove the --hostname-override argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--hostname-override' is not present"
                        },
                        {
                            "test_number": "4.2.8",
                            "test_desc": "Ensure that the eventRecordQPS argument is set to a level which ensures appropriate event capture (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `eventRecordQPS` to an appropriate level.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `eventRecordQPS` to an appropriate level.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--event-qps' is greater or equal to 0 OR '--event-qps' is not present"
                        },
                        {
                            "test_number": "4.2.9",
                            "test_desc": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `tlsCertFile` to the location\nof the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile`\nto the location of the corresponding private key file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameters in KUBELET_CERTIFICATE_ARGS variable.\n--tls-cert-file=\u003cpath/to/tls-certificate-file\u003e\n--tls-private-key-file=\u003cpath/to/tls-key-file\u003e\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `tlsCertFile` to the location\nof the certificate file to use to identify this Kubelet, and `tlsPrivateKeyFile`\nto the location of the corresponding private key file.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the below parameters in KUBELET_CERTIFICATE_ARGS variable.\n--tls-cert-file=\u003cpath/to/tls-certificate-file\u003e\n--tls-private-key-file=\u003cpath/to/tls-key-file\u003e\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--tls-cert-file' is present AND '--tls-private-key-file' is present"
                        },
                        {
                            "test_number": "4.2.10",
                            "test_desc": "Ensure that the --rotate-certificates argument is not set to false (Automated)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to add the line `rotateCertificates` to `true` or\nremove it altogether to use the default value.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS\nvariable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to add the line `rotateCertificates` to `true` or\nremove it altogether to use the default value.\nIf using command line arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nremove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS\nvariable.\nBased on your system, restart the kubelet service. For example,\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": true,
                            "IsMultiple": false,
                            "expected_result": "'--rotate-certificates' is equal to 'true' OR '--rotate-certificates' is not present"
                        },
                        {
                            "test_number": "4.2.11",
                            "test_desc": "Verify that the RotateKubeletServerCertificate argument is set to true (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.\n--feature-gates=RotateKubeletServerCertificate=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "Edit the kubelet service file /etc/systemd/system/kubelet.service\non each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.\n--feature-gates=RotateKubeletServerCertificate=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /etc/kubernetes/certs/ca.crt\n    server: https://benchsecak-benchsec-rg-d3232b-j5erejk4.hcp.eastus.azmk8s.io:443\n  name: default-cluster\ncontexts:\n- context:\n    cluster: default-cluster\n    namespace: default\n    user: default-auth\n  name: default-context\ncurrent-context: default-context\nkind: Config\npreferences: {}\nusers:\n- name: default-auth\n  user:\n    client-certificate: /var/lib/kubelet/pki/kubelet-client-current.pem\n    client-key: /var/lib/kubelet/pki/kubelet-client-current.pem",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'{.featureGates.RotateKubeletServerCertificate}' is present OR '{.featureGates.RotateKubeletServerCertificate}' is not present"
                        },
                        {
                            "test_number": "4.2.12",
                            "test_desc": "Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "If using a Kubelet config file, edit the file to set `TLSCipherSuites` to\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nor to a subset of these values.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the --tls-cipher-suites parameter as follows, or to a subset of these values.\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
                            "test_info": [
                                "If using a Kubelet config file, edit the file to set `TLSCipherSuites` to\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nor to a subset of these values.\nIf using executable arguments, edit the kubelet service file\n/etc/systemd/system/kubelet.service on each worker node and\nset the --tls-cipher-suites parameter as follows, or to a subset of these values.\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n"
                            ],
                            "status": "PASS",
                            "actual_value": "UID          PID    PPID  C STIME TTY          TIME CMD\nroot        2358       1  1 Nov04 ?        00:04:55 /usr/local/bin/kubelet --enable-server --node-labels=agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,agentpool=nodepool1,kubernetes.azure.com/agentpool=nodepool1,kubernetes.azure.com/cluster=MC_benchsec-rg_benchsecAKSCluster_eastus,kubernetes.azure.com/consolidated-additional-properties=2b257497-72e6-11ee-9601-76904c56133c,kubernetes.azure.com/kubelet-identity-client-id=62e55ea4-f80a-4235-94b4-cb48b6d319fd,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-2204gen2containerd-202310.09.0,kubernetes.azure.com/nodepool-type=VirtualMachineScaleSets,kubernetes.azure.com/os-sku=Ubuntu,kubernetes.azure.com/role=agent,kubernetes.azure.com/storageprofile=managed,kubernetes.azure.com/storagetier=Premium_LRS,storageprofile=managed,storagetier=Premium_LRS --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins --kubeconfig /var/lib/kubelet/kubeconfig --bootstrap-kubeconfig /var/lib/kubelet/bootstrap-kubeconfig --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --cgroup-driver=systemd --address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=external --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --container-log-max-size=50M --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%,pid.available\u003c2000 --feature-gates=CSIMigration=true,CSIMigrationAzureDisk=true,CSIMigrationAzureFile=true,DelegateFSGroupToCSIDriver=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi,pid=1000 --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --protect-kernel-defaults=true --read-only-port=0 --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'--tls-cipher-suites' contains valid elements from 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256'"
                        },
                        {
                            "test_number": "4.2.13",
                            "test_desc": "Ensure that a limit is set on pod PIDs (Manual)",
                            "audit": "/bin/ps -fC kubelet",
                            "AuditEnv": "",
                            "AuditConfig": "/bin/cat /var/lib/kubelet/kubeconfig",
                            "type": "",
                            "remediation": "Decide on an appropriate level for this parameter and set it,\neither via the --pod-max-pids command line parameter or the PodPidsLimit configuration file setting.\n",
                            "test_info": [
                                "Decide on an appropriate level for this parameter and set it,\neither via the --pod-max-pids command line parameter or the PodPidsLimit configuration file setting.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /etc/kubernetes/certs/ca.crt\n    server: https://benchsecak-benchsec-rg-d3232b-j5erejk4.hcp.eastus.azmk8s.io:443\n  name: default-cluster\ncontexts:\n- context:\n    cluster: default-cluster\n    namespace: default\n    user: default-auth\n  name: default-context\ncurrent-context: default-context\nkind: Config\npreferences: {}\nusers:\n- name: default-auth\n  user:\n    client-certificate: /var/lib/kubelet/pki/kubelet-client-current.pem\n    client-key: /var/lib/kubelet/pki/kubelet-client-current.pem",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "'{.podPidsLimit}' is present"
                        }
                    ]
                }
            ],
            "total_pass": 22,
            "total_fail": 0,
            "total_warn": 1,
            "total_info": 0
        },
        {
            "id": "5",
            "version": "cis-1.7",
            "detected_version": "1.26",
            "text": "Kubernetes Policies",
            "node_type": "policies",
            "tests": [
                {
                    "section": "5.1",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 13,
                    "info": 0,
                    "desc": "RBAC and Service Accounts",
                    "results": [
                        {
                            "test_number": "5.1.1",
                            "test_desc": "Ensure that the cluster-admin role is only used where required (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and\nif they need this role or if they could use a role with fewer privileges.\nWhere possible, first bind users to a lower privileged role and then remove the\nclusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n",
                            "test_info": [
                                "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and\nif they need this role or if they could use a role with fewer privileges.\nWhere possible, first bind users to a lower privileged role and then remove the\nclusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.2",
                            "test_desc": "Minimize access to secrets (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove get, list and watch access to Secret objects in the cluster.\n",
                            "test_info": [
                                "Where possible, remove get, list and watch access to Secret objects in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.3",
                            "test_desc": "Minimize wildcard use in Roles and ClusterRoles (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible replace any use of wildcards in clusterroles and roles with specific\nobjects or actions.\n",
                            "test_info": [
                                "Where possible replace any use of wildcards in clusterroles and roles with specific\nobjects or actions.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.4",
                            "test_desc": "Minimize access to create pods (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove create access to pod objects in the cluster.\n",
                            "test_info": [
                                "Where possible, remove create access to pod objects in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.5",
                            "test_desc": "Ensure that default service accounts are not actively used. (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create explicit service accounts wherever a Kubernetes workload requires specific access\nto the Kubernetes API server.\nModify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n",
                            "test_info": [
                                "Create explicit service accounts wherever a Kubernetes workload requires specific access\nto the Kubernetes API server.\nModify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.6",
                            "test_desc": "Ensure that Service Account Tokens are only mounted where necessary (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Modify the definition of pods and service accounts which do not need to mount service\naccount tokens to disable it.\n",
                            "test_info": [
                                "Modify the definition of pods and service accounts which do not need to mount service\naccount tokens to disable it.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.7",
                            "test_desc": "Avoid use of system:masters group (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Remove the system:masters group from all users in the cluster.\n",
                            "test_info": [
                                "Remove the system:masters group from all users in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.8",
                            "test_desc": "Limit use of the Bind, Impersonate and Escalate permissions in the Kubernetes cluster (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove the impersonate, bind and escalate rights from subjects.\n",
                            "test_info": [
                                "Where possible, remove the impersonate, bind and escalate rights from subjects.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.9",
                            "test_desc": "Minimize access to create persistent volumes (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove create access to PersistentVolume objects in the cluster.\n",
                            "test_info": [
                                "Where possible, remove create access to PersistentVolume objects in the cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.10",
                            "test_desc": "Minimize access to the proxy sub-resource of nodes (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove access to the proxy sub-resource of node objects.\n",
                            "test_info": [
                                "Where possible, remove access to the proxy sub-resource of node objects.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.11",
                            "test_desc": "Minimize access to the approval sub-resource of certificatesigningrequests objects (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove access to the approval sub-resource of certificatesigningrequest objects.\n",
                            "test_info": [
                                "Where possible, remove access to the approval sub-resource of certificatesigningrequest objects.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.12",
                            "test_desc": "Minimize access to webhook configuration objects (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove access to the validatingwebhookconfigurations or mutatingwebhookconfigurations objects\n",
                            "test_info": [
                                "Where possible, remove access to the validatingwebhookconfigurations or mutatingwebhookconfigurations objects\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.1.13",
                            "test_desc": "Minimize access to the service account token creation (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Where possible, remove access to the token sub-resource of serviceaccount objects.\n",
                            "test_info": [
                                "Where possible, remove access to the token sub-resource of serviceaccount objects.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.2",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 13,
                    "info": 0,
                    "desc": "Pod Security Standards",
                    "results": [
                        {
                            "test_number": "5.2.1",
                            "test_desc": "Ensure that the cluster has at least one active policy control mechanism in place (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Ensure that either Pod Security Admission or an external policy control system is in place\nfor every namespace which contains user workloads.\n",
                            "test_info": [
                                "Ensure that either Pod Security Admission or an external policy control system is in place\nfor every namespace which contains user workloads.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.2",
                            "test_desc": "Minimize the admission of privileged containers (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of privileged containers.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of privileged containers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.3",
                            "test_desc": "Minimize the admission of containers wishing to share the host process ID namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostPID` containers.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostPID` containers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.4",
                            "test_desc": "Minimize the admission of containers wishing to share the host IPC namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostIPC` containers.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostIPC` containers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.5",
                            "test_desc": "Minimize the admission of containers wishing to share the host network namespace (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostNetwork` containers.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of `hostNetwork` containers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.6",
                            "test_desc": "Minimize the admission of containers with allowPrivilegeEscalation (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with `.spec.allowPrivilegeEscalation` set to `true`.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with `.spec.allowPrivilegeEscalation` set to `true`.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.7",
                            "test_desc": "Minimize the admission of root containers (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Create a policy for each namespace in the cluster, ensuring that either `MustRunAsNonRoot`\nor `MustRunAs` with the range of UIDs not including 0, is set.\n",
                            "test_info": [
                                "Create a policy for each namespace in the cluster, ensuring that either `MustRunAsNonRoot`\nor `MustRunAs` with the range of UIDs not including 0, is set.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.8",
                            "test_desc": "Minimize the admission of containers with the NET_RAW capability (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with the `NET_RAW` capability.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with the `NET_RAW` capability.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.9",
                            "test_desc": "Minimize the admission of containers with added capabilities (Automated)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Ensure that `allowedCapabilities` is not present in policies for the cluster unless\nit is set to an empty array.\n",
                            "test_info": [
                                "Ensure that `allowedCapabilities` is not present in policies for the cluster unless\nit is set to an empty array.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.10",
                            "test_desc": "Minimize the admission of containers with capabilities assigned (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Review the use of capabilites in applications running on your cluster. Where a namespace\ncontains applicaions which do not require any Linux capabities to operate consider adding\na PSP which forbids the admission of containers which do not drop all capabilities.\n",
                            "test_info": [
                                "Review the use of capabilites in applications running on your cluster. Where a namespace\ncontains applicaions which do not require any Linux capabities to operate consider adding\na PSP which forbids the admission of containers which do not drop all capabilities.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.11",
                            "test_desc": "Minimize the admission of Windows HostProcess containers (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers that have `.securityContext.windowsOptions.hostProcess` set to `true`.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers that have `.securityContext.windowsOptions.hostProcess` set to `true`.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.12",
                            "test_desc": "Minimize the admission of HostPath volumes (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with `hostPath` volumes.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers with `hostPath` volumes.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.2.13",
                            "test_desc": "Minimize the admission of containers which use HostPorts (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers which use `hostPort` sections.\n",
                            "test_info": [
                                "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of containers which use `hostPort` sections.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.3",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "Network Policies and CNI",
                    "results": [
                        {
                            "test_number": "5.3.1",
                            "test_desc": "Ensure that the CNI in use supports NetworkPolicies (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "If the CNI plugin in use does not support network policies, consideration should be given to\nmaking use of a different plugin, or finding an alternate mechanism for restricting traffic\nin the Kubernetes cluster.\n",
                            "test_info": [
                                "If the CNI plugin in use does not support network policies, consideration should be given to\nmaking use of a different plugin, or finding an alternate mechanism for restricting traffic\nin the Kubernetes cluster.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.3.2",
                            "test_desc": "Ensure that all Namespaces have NetworkPolicies defined (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the documentation and create NetworkPolicy objects as you need them.\n",
                            "test_info": [
                                "Follow the documentation and create NetworkPolicy objects as you need them.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.4",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 2,
                    "info": 0,
                    "desc": "Secrets Management",
                    "results": [
                        {
                            "test_number": "5.4.1",
                            "test_desc": "Prefer using Secrets as files over Secrets as environment variables (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "If possible, rewrite application code to read Secrets from mounted secret files, rather than\nfrom environment variables.\n",
                            "test_info": [
                                "If possible, rewrite application code to read Secrets from mounted secret files, rather than\nfrom environment variables.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.4.2",
                            "test_desc": "Consider external secret storage (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Refer to the Secrets management options offered by your cloud provider or a third-party\nsecrets management solution.\n",
                            "test_info": [
                                "Refer to the Secrets management options offered by your cloud provider or a third-party\nsecrets management solution.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.5",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 1,
                    "info": 0,
                    "desc": "Extensible Admission Control",
                    "results": [
                        {
                            "test_number": "5.5.1",
                            "test_desc": "Configure Image Provenance using ImagePolicyWebhook admission controller (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the Kubernetes documentation and setup image provenance.\n",
                            "test_info": [
                                "Follow the Kubernetes documentation and setup image provenance.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                },
                {
                    "section": "5.7",
                    "type": "",
                    "pass": 0,
                    "fail": 0,
                    "warn": 4,
                    "info": 0,
                    "desc": "General Policies",
                    "results": [
                        {
                            "test_number": "5.7.1",
                            "test_desc": "Create administrative boundaries between resources using namespaces (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the documentation and create namespaces for objects in your deployment as you need\nthem.\n",
                            "test_info": [
                                "Follow the documentation and create namespaces for objects in your deployment as you need\nthem.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.7.2",
                            "test_desc": "Ensure that the seccomp profile is set to docker/default in your Pod definitions (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Use `securityContext` to enable the docker/default seccomp profile in your pod definitions.\nAn example is as below:\n  securityContext:\n    seccompProfile:\n      type: RuntimeDefault\n",
                            "test_info": [
                                "Use `securityContext` to enable the docker/default seccomp profile in your pod definitions.\nAn example is as below:\n  securityContext:\n    seccompProfile:\n      type: RuntimeDefault\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.7.3",
                            "test_desc": "Apply SecurityContext to your Pods and Containers (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Follow the Kubernetes documentation and apply SecurityContexts to your Pods. For a\nsuggested list of SecurityContexts, you may refer to the CIS Security Benchmark for Docker\nContainers.\n",
                            "test_info": [
                                "Follow the Kubernetes documentation and apply SecurityContexts to your Pods. For a\nsuggested list of SecurityContexts, you may refer to the CIS Security Benchmark for Docker\nContainers.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        },
                        {
                            "test_number": "5.7.4",
                            "test_desc": "The default namespace should not be used (Manual)",
                            "audit": "",
                            "AuditEnv": "",
                            "AuditConfig": "",
                            "type": "manual",
                            "remediation": "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes\nresources and that all new resources are created in a specific namespace.\n",
                            "test_info": [
                                "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes\nresources and that all new resources are created in a specific namespace.\n"
                            ],
                            "status": "WARN",
                            "actual_value": "",
                            "scored": false,
                            "IsMultiple": false,
                            "expected_result": "",
                            "reason": "Test marked as a manual test"
                        }
                    ]
                }
            ],
            "total_pass": 0,
            "total_fail": 0,
            "total_warn": 35,
            "total_info": 0
        }
    ],
    "Totals": {
        "total_pass": 22,
        "total_fail": 0,
        "total_warn": 36,
        "total_info": 0
    }
}